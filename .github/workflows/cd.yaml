name: Deploy Workflow

on:
  push:
    branches:
      - dev
      - main

  workflow_dispatch:
    inputs:
      new_tag:
        description: "New image tag (e.g., v1.0, v1.1, etc.)"
        required: true
        type: string
        default: "latest"
      environment:
        description: "Target environment (e.g., dev or prod)"
        required: true
        type: choice
        default: "dev"
        options:
          - dev
          - prod

permissions:
  contents: write

jobs:
  build-and-push-image:
    name: Build and push Docker image to ACR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.ACR_LOGIN_SERVER }}
          username: ${{ vars.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker image
        run: |
          APP_NAME=${{ vars.APP_NAME }}
          TAG=${{ github.sha }}

          docker build -t $APP_NAME -t $APP_NAME:$TAG .
          echo "Success: Built $APP_NAME with tag: $TAG"

          docker tag $APP_NAME ${{ vars.ACR_LOGIN_SERVER }}/$APP_NAME:$TAG
          docker push ${{ vars.ACR_LOGIN_SERVER }}/$APP_NAME:$TAG

  deploy:
    name: Set new docker image tag in infra specification
    runs-on: ubuntu-latest
    needs: [build-and-push-image]
    steps:
      - name: Checkout infra repo
        uses: actions/checkout@v4
        with:
          repository: ${{ vars.INFRA_REPO }}
          token: ${{ secrets.DEPLOY_GH_TOKEN }}

      - name: Set deployment variables
        id: set-vars
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "NEW_TAG=${{ inputs.new_tag }}" >> $GITHUB_ENV
            echo "ENVIRONMENT=${{ inputs.environment }}" >> $GITHUB_ENV
          else
            echo "NEW_TAG=${{ github.sha }}" >> $GITHUB_ENV
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          fi

      - name: Update Target Environment Image Tag
        run: |
          yq e '.images[0].newTag = "$NEW_TAG"' -i kustomize/${{ vars.APP_NAME }}/overlays/$ENVIRONMENT/kustomization.yaml

      - name: Commit and Push
        run: |
          CALLER="${{ github.event_name }}-${{ inputs.caller }}"
          GITHUB_TOKEN=${{ secrets.DEPLOY_TOKEN }}

          git config user.name "gh-actions-$CALLER"
          git config user.email "github-actions@github.com"
          git add kustomize/${{ vars.APP_NAME }}/overlays/$ENVIRONMENT/kustomization.yaml
          git commit -m "Deploy new image tag $NEW_TAG to $ENVIRONMENT by $CALLER"
          git push
